확인했습니다. first_screen의 First_Button_Clicked 메서드가 호출될 때, 지정된 레이아웃이 포함된 새로운 화면이 표시되도록 하겠습니다. 이를 위해 first_screen을 수정하고, 필요한 레이아웃을 구성하도록 하겠습니다.
from kivy.uix.boxlayout import BoxLayout
from kivy.uix.button import Button
from kivy.uix.image import Image
from kivy.uix.label import Label
from kivy.uix.screenmanager import Screen
import os

class ImageScreen(Screen):
    def __init__(self, app, **kwargs):
        super(ImageScreen, self).__init__(**kwargs)
        self.app = app

        # 메인 레이아웃
        main_layout = BoxLayout(orientation='horizontal')

        # 버튼 레이아웃
        button_layout = BoxLayout(orientation='vertical', size_hint=(0.2, 1))
        
        # 버튼 추가
        for i in range(1, 6):
            btn = Button(text=f'버튼 {i}', background_color=(1, 0, 0, 1))
            button_layout.add_widget(btn)
        
        # 이미지 레이아웃
        image_layout = BoxLayout(size_hint=(0.8, 1))
        
        # 이미지 경로 설정
        image_path = os.path.join(os.path.dirname(__file__), "assets", "blueprintmap.png")
        
        # 이미지 뷰 생성
        image_widget = Image(source=image_path)
        
        # 이미지 레이아웃에 이미지 추가
        image_layout.add_widget(image_widget)

        # 메인 레이아웃에 버튼 레이아웃과 이미지 레이아웃 추가
        main_layout.add_widget(button_layout)
        main_layout.add_widget(image_layout)

        self.add_widget(main_layout)


from kivy.app import App
from kivy.uix.screenmanager import ScreenManager, Screen
from kivy.uix.boxlayout import BoxLayout
from kivy.uix.button import Button
from kivy.core.text import LabelBase
from kivy.uix.label import Label
from kivy.uix.popup import Popup
from kivy.core.window import Window

import map
import fonts
import utils

class main_screen(Screen):
    def __init__(self, app, **kwargs):
        super(main_screen, self).__init__(**kwargs)
        self.app = app
        self.layout = BoxLayout(orientation='vertical', spacing=10, padding=20)
        
        # init 시 폰트 등록
        fonts.register_fonts()

        Start_Button = Button(text='시작', size_hint=(1, 0.5), font_name='youth')
        Start_Button.bind(on_press=self.Start_Button_Clicked)
        self.layout.add_widget(Start_Button)

        First_Button = Button(text='1번째 기능', size_hint=(1, 0.5), font_name='youth')
        First_Button.bind(on_press=self.First_Button_Clicked)
        self.layout.add_widget(First_Button)

        Second_Button = Button(text='2번째 기능', size_hint=(1, 0.5), font_name='youth')
        Second_Button.bind(on_press=self.Second_Button_Clicked)
        self.layout.add_widget(Second_Button)

        Third_Button = Button(text='3번째 기능', size_hint=(1, 0.5), font_name='youth')
        Third_Button.bind(on_press=self.Third_Button_Clicked)
        self.layout.add_widget(Third_Button)

        Exit_Button = Button(text='종료', size_hint=(1, 0.5), font_name='youth')
        Exit_Button.bind(on_press=self.Exit_Button_Clicked)
        self.layout.add_widget(Exit_Button)
        
        self.add_widget(self.layout)
        
    def Start_Button_Clicked(self, instance):
        print("start button pressed")

    def First_Button_Clicked(self, instance):
        print("first button pressed")
        self.app.Switch_To('first_screen') 

    def Second_Button_Clicked(self, instance):
        print("second button pressed")

    def Third_Button_Clicked(self, instance):
        print("third button pressed")
        
    def Exit_Button_Clicked(self, instance):
        utils.Ending_Messages(self.app)

class first_screen(Screen):
    def __init__(self, app, **kwargs):
        super(first_screen, self).__init__(**kwargs)
        self.app = app
        self.layout = BoxLayout(orientation='vertical', spacing=10, padding=20)
        back_button = Button(text='뒤로 가기', size_hint=(1, 0.5), font_name='youth')
        back_button.bind(on_press=self.Back_To_Main)
        
        Exit_Button = Button(text='종료', size_hint=(1, 0.5), font_name='youth')
        # 닫기 버튼을 눌렀을 때 종료창 호출
        Exit_Button.bind(on_press=self.Exit_Button_Clicked)
        
        First_Button = Button(text='첫 번째 기능', size_hint=(1, 0.5), font_name='youth')
        First_Button.bind(on_press=self.First_Button_Clicked)
        
        self.layout.add_widget(back_button)
        self.layout.add_widget(Exit_Button)
        self.layout.add_widget(First_Button)
        self.add_widget(self.layout)

    def Back_To_Main(self, instance):
        self.app.Switch_To('main_screen') 

    def Exit_Button_Clicked(self, instance):
        utils.Ending_Messages(self.app)

    def First_Button_Clicked(self, instance):
        # ImageScreen 추가
        image_screen = map.ImageScreen(self.app, name='image_screen')
        self.app.screen_manager.add_widget(image_screen)
        self.app.Switch_To('image_screen')

class MyScreenManager(ScreenManager):
    def __init__(self, app, **kwargs):
        super(MyScreenManager, self).__init__(**kwargs)
        self.app = app       

class MyApp(App):
    def build(self):
        self.app = App
        self.screen_manager = MyScreenManager(self)
        self.main_screen = main_screen(self, name='main_screen')
        self.first_screen = first_screen(self, name='first_screen')
        
        self.screen_manager.add_widget(self.main_screen)
        self.screen_manager.add_widget(self.first_screen)
        
        # 창에 상관없이 전역적으로 처리 
        Window.bind(on_request_close=self.on_request_close)
        return self.screen_manager

    def Switch_To(self, screen_name):
        self.screen_manager.current = screen_name

    def Toast_Messages(self, title, message):
        toast_label = Label(text=message, font_name='youth')
        toast_popup = Popup(title=title, content=toast_label, auto_dismiss=False, size_hint=(None, None), size=(200, 100))
        toast_popup.open()
    
    def Exit_Button_Clicked(self, instance):
        utils.Ending_Messages(self.app)
    
    def on_request_close(self, *args):
        utils.Ending_Messages(self.app)
        return True

확인했습니다. first_screen의 First_Button_Clicked 메서드가 호출될 때, 지정된 레이아웃이 포함된 새로운 화면이 표시되도록 하겠습니다. 이를 위해 first_screen을 수정하고, 필요한 레이아웃을 구성하도록 하겠습니다.

map.py 파일 수정
팝업 대신 새로운 화면으로 전환하도록 map.py를 수정하겠습니다.

python
코드 복사
from kivy.uix.boxlayout import BoxLayout
from kivy.uix.button import Button
from kivy.uix.image import Image
from kivy.uix.label import Label
from kivy.uix.screenmanager import Screen
import os

class ImageScreen(Screen):
    def __init__(self, app, **kwargs):
        super(ImageScreen, self).__init__(**kwargs)
        self.app = app

        # 메인 레이아웃
        main_layout = BoxLayout(orientation='horizontal')

        # 버튼 레이아웃
        button_layout = BoxLayout(orientation='vertical', size_hint=(0.2, 1))
        
        # 버튼 추가
        for i in range(1, 6):
            btn = Button(text=f'버튼 {i}', background_color=(1, 0, 0, 1))
            button_layout.add_widget(btn)
        
        # 이미지 레이아웃
        image_layout = BoxLayout(size_hint=(0.8, 1))
        
        # 이미지 경로 설정
        image_path = os.path.join(os.path.dirname(__file__), "assets", "blueprintmap.png")
        
        # 이미지 뷰 생성
        image_widget = Image(source=image_path)
        
        # 이미지 레이아웃에 이미지 추가
        image_layout.add_widget(image_widget)

        # 메인 레이아웃에 버튼 레이아웃과 이미지 레이아웃 추가
        main_layout.add_widget(button_layout)
        main_layout.add_widget(image_layout)

        self.add_widget(main_layout)

screens.py 파일 수정
first_screen의 First_Button_Clicked 메서드를 수정하여 ImageScreen으로 전환하도록 하겠습니다.


확인했습니다. first_screen의 First_Button_Clicked 메서드가 호출될 때, 지정된 레이아웃이 포함된 새로운 화면이 표시되도록 하겠습니다. 이를 위해 first_screen을 수정하고, 필요한 레이아웃을 구성하도록 하겠습니다.

map.py 파일 수정
팝업 대신 새로운 화면으로 전환하도록 map.py를 수정하겠습니다.

python
코드 복사
from kivy.uix.boxlayout import BoxLayout
from kivy.uix.button import Button
from kivy.uix.image import Image
from kivy.uix.label import Label
from kivy.uix.screenmanager import Screen
import os

class ImageScreen(Screen):
    def __init__(self, app, **kwargs):
        super(ImageScreen, self).__init__(**kwargs)
        self.app = app

        # 메인 레이아웃
        main_layout = BoxLayout(orientation='horizontal')

        # 버튼 레이아웃
        button_layout = BoxLayout(orientation='vertical', size_hint=(0.2, 1))
        
        # 버튼 추가
        for i in range(1, 6):
            btn = Button(text=f'버튼 {i}', background_color=(1, 0, 0, 1))
            button_layout.add_widget(btn)
        
        # 이미지 레이아웃
        image_layout = BoxLayout(size_hint=(0.8, 1))
        
        # 이미지 경로 설정
        image_path = os.path.join(os.path.dirname(__file__), "assets", "blueprintmap.png")
        
        # 이미지 뷰 생성
        image_widget = Image(source=image_path)
        
        # 이미지 레이아웃에 이미지 추가
        image_layout.add_widget(image_widget)

        # 메인 레이아웃에 버튼 레이아웃과 이미지 레이아웃 추가
        main_layout.add_widget(button_layout)
        main_layout.add_widget(image_layout)

        self.add_widget(main_layout)
screens.py 파일 수정
first_screen의 First_Button_Clicked 메서드를 수정하여 ImageScreen으로 전환하도록 하겠습니다.